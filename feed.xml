<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <!-- Include Data Base  -->
    












    <title>编程人生</title>
    <description>记录编程生活的点点滴滴，努力提升自己。</description>
    <link>https://flyingeye.cn/</link>
    <atom:link href="https://flyingeye.cn/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 15 Sep 2019 18:39:14 +0800</pubDate>
    <lastBuildDate>Sun, 15 Sep 2019 18:39:14 +0800</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>ARTS挑战第四周</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#arts挑战第五周&quot; id=&quot;markdown-toc-arts挑战第五周&quot;&gt;ARTS挑战第五周&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;h2 id=&quot;arts挑战第五周&quot;&gt;ARTS挑战第五周&lt;/h2&gt; &lt;p&gt;Algorithm: &lt;a href=&quot;http://flyingeye.cn/blog/LeetCode算法题解-Reverse-Integer/&quot; target=&quot;_blank&quot;&gt;LeetCode算法题解-Reverse Integer&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Review: &lt;a href=&quot;http://flyingeye.cn/blog/如何将Unity游戏嵌入iOS原生的Swift应用程序/&quot; target=&quot;_blank&quot;&gt;如何将Unity游戏嵌入iOS原生的Swift应用程序&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Tip: 暂无&lt;/p&gt; &lt;p&gt;Share: &lt;a href=&quot;http://flyingeye.cn/blog/听书笔记-数据结构与算法之美(4)/&quot; target=&quot;_blank&quot;&gt;听书笔记-数据结构与算法之美(4)&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body jektify__body--dark jektify__body--custom&quot; style=&quot;display: block&quot;&gt; &lt;h1 class=&quot;jektify__title jektify__title--dark jektify__user--dark jektify__title--custom&quot; style=&quot;display: none;&quot;&gt;Música&lt;/h1&gt; &lt;p class=&quot;jektify__description jektify__description--dark jektify__description--custom&quot; style=&quot;display: none;&quot;&gt;Jekyll plugin to generate html snippets for embedding Spotify Musics. To listen to the...</description>
        <pubDate>Sun, 15 Sep 2019 09:02:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/ARTS%E6%8C%91%E6%88%98%E7%AC%AC%E4%BA%94%E5%91%A8/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/ARTS%E6%8C%91%E6%88%98%E7%AC%AC%E4%BA%94%E5%91%A8/</guid>
        
        <tag>ARTS</tag>
        
        <tag>ARTS挑战</tag>
        
        <tag>挑战</tag>
        
      </item>
    
      <item>
        <title>如何将Unity游戏嵌入iOS原生的Swift应用程序</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#引用&quot; id=&quot;markdown-toc-引用&quot;&gt;引用：&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#注意事项&quot; id=&quot;markdown-toc-注意事项&quot;&gt;注意事项：&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#教程&quot; id=&quot;markdown-toc-教程&quot;&gt;教程：&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;文章来源：&lt;a href=&quot;https://medium.com/@IronEqual/how-to-embed-a-unity-game-into-an-ios-native-swift-app-772a0b65c82&quot; target=&quot;_blank&quot;&gt;How to embed a Unity game into an iOS native Swift App&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Hi！为了我们未来的B2B协议，我们必须必须把我们的游戏集成到IOS原生的Swift应用环境中去。为了使它高效而且没有错误，我们已经努力了很多天。 我们想通过这篇简单的教程来分享我们的只是和进展。&lt;/p&gt; &lt;h5 id=&quot;引用&quot;&gt;引用：&lt;/h5&gt; &lt;p&gt;本教程的灵感来自于其他人的工作： 将Unity5集成到使用Xcode开发的原生IOS应用中 https://the-nerd.be/2015/11/13/integrate-unity-5-in-a-native-ios-app-with-xcode-7&lt;/p&gt; &lt;p&gt;jiulongw / swift-unity https://github.com/jiulongw/swift-unity&lt;/p&gt; &lt;p&gt;keyv / iOSUnityVuforiaGuide https://github.com/keyv/iOSUnityVuforiaGuide&lt;/p&gt; &lt;p&gt;jack_loverde / Unity 5 Vuforia 6和iOS原生集成 https://bitbucket.org/jack_loverde/unity-5-vuforia-6-and-ios-native-integration/src/master&lt;/p&gt; &lt;h5 id=&quot;注意事项&quot;&gt;注意事项：&lt;/h5&gt; &lt;p&gt;1、这篇教程深受Jiulong Wang的工作的启发，你可以点击链接查看他的教程和他出色的自动化脚本https://github.com/jiulongw/swift-unity 2、这篇教程使用Unity2017.4.0f1，但是它也适用于2018.2.2f1版本。但是必须把项目中“构建设置”的”不匹配返回类型”设置为”yes”。 3、注意Xcode不喜欢在路径和项目名称中使用空格，所以需要避免它。 4、注意嵌入Unity会在游戏中产生问题，尤其是图形方面的问题 5、当你修改了你的Unity项目并再一次把它导出时，请确定替换”Classes”，“Libraries”和”Data”文件夹，检查项目设置中的”Configurations”是否已被设置为”Untiy”。 6、当你在Xcode中遇到错误时，命令”Clean”(Product/Clean)Command+Shift+K和”Clean Build Folder”Command+Option+Shift+K能帮你在构建之前摆脱它。 7、当你编译时，如果在Xcode中遇到一个”Could not locate device support files” 错误，下载这个https://github.com/iGhibli/iOS-DeviceSupport 并且在”/Applications/Xcode.app/Contents/Developer/Platforns/iPhoneOS.platform/DeviceSupport”&lt;/p&gt; &lt;h5 id=&quot;教程&quot;&gt;教程：&lt;/h5&gt; &lt;p&gt;1、打开Xcode并且创建一个新的Swift工程或者打开一个已经存在的工程。&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/Unity-Embed-Into-Ios_1.png&quot; title=&quot;Unity-Embed-Into-Ios_1.png&quot; alt=&quot;Unity-Embed-Into-Ios_1.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;2、选择”Single View App”，然后点击”下一步”&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt;...</description>
        <pubDate>Sun, 15 Sep 2019 07:53:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E5%A6%82%E4%BD%95%E5%B0%86Unity%E6%B8%B8%E6%88%8F%E5%B5%8C%E5%85%A5iOS%E5%8E%9F%E7%94%9F%E7%9A%84Swift%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E5%A6%82%E4%BD%95%E5%B0%86Unity%E6%B8%B8%E6%88%8F%E5%B5%8C%E5%85%A5iOS%E5%8E%9F%E7%94%9F%E7%9A%84Swift%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</guid>
        
        <tag>Unity</tag>
        
        <tag>嵌入iOS</tag>
        
        <tag>Swift应用程序</tag>
        
      </item>
    
      <item>
        <title>LeetCode算法题解-第七道题</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;LeetCode 第七道题: Reverse Integer，难度简单。&lt;/p&gt; &lt;p&gt;Given a 32-bit signed integer, reverse digits of an integer.&lt;/p&gt; &lt;p&gt;Example 1:&lt;/p&gt; &lt;p&gt;Input: 123 Output: 321 Example 2:&lt;/p&gt; &lt;p&gt;Input: -123 Output: -321 Example 3:&lt;/p&gt; &lt;p&gt;Input: 120 Output: 21 Note: Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.&lt;/p&gt; &lt;p&gt;最近一周家里有急事，先写了一个解法，后面优化。&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;...</description>
        <pubDate>Sun, 15 Sep 2019 07:51:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3-Reverse-Integer/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3-Reverse-Integer/</guid>
        
        <tag>LeetCode</tag>
        
        <tag>算法</tag>
        
      </item>
    
      <item>
        <title>听书笔记：数据结构与算法之美(3)</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#什么是数组&quot; id=&quot;markdown-toc-什么是数组&quot;&gt;什么是数组&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#线性表&quot; id=&quot;markdown-toc-线性表&quot;&gt;线性表&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#连续的内存存储空间和相同类型的数据&quot; id=&quot;markdown-toc-连续的内存存储空间和相同类型的数据&quot;&gt;连续的内存存储空间和相同类型的数据&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#随机访问的实现&quot; id=&quot;markdown-toc-随机访问的实现&quot;&gt;随机访问的实现&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#误区数组和链表的区别链表适合插入和删除操作时间复杂度是o1数组适合查找查找的时间复杂度是o1&quot; id=&quot;markdown-toc-误区数组和链表的区别链表适合插入和删除操作时间复杂度是o1数组适合查找查找的时间复杂度是o1&quot;&gt;误区：数组和链表的区别：“链表适合插入和删除操作，时间复杂度是O(1)；数组适合查找，查找的时间复杂度是O(1)”&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#低效的插入和删除&quot; id=&quot;markdown-toc-低效的插入和删除&quot;&gt;低效的插入和删除&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#插入操作&quot; id=&quot;markdown-toc-插入操作&quot;&gt;插入操作&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#删除操作&quot; id=&quot;markdown-toc-删除操作&quot;&gt;删除操作&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#警惕数组访问越界的问题&quot; id=&quot;markdown-toc-警惕数组访问越界的问题&quot;&gt;警惕数组访问越界的问题&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#容器能否代替数组&quot; id=&quot;markdown-toc-容器能否代替数组&quot;&gt;容器能否代替数组&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#如何实现随机访问&quot; id=&quot;markdown-toc-如何实现随机访问&quot;&gt;如何实现随机访问&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;h2 id=&quot;什么是数组&quot;&gt;什么是数组&lt;/h2&gt; &lt;p&gt;数据(Array)是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。&lt;/p&gt; &lt;h3 id=&quot;线性表&quot;&gt;线性表&lt;/h3&gt; &lt;p&gt;顾名思义，线性表就是数据排成像一条线一样的结构。每个线性表上的数据最多只有前和后两个方向。其实除了数组之外，链表、队列、栈也是线性表结构。 与之相对的是非线性表，比如二叉树、图、堆等，其数据之间并不是简单的前后关系。&lt;/p&gt; &lt;h3 id=&quot;连续的内存存储空间和相同类型的数据&quot;&gt;连续的内存存储空间和相同类型的数据&lt;/h3&gt; &lt;p&gt;这两个限制使它有了堪称杀手锏的特性：随机访问。但同时也造成了很多操作的低效性。比如插入和删除操作。&lt;/p&gt; &lt;h3 id=&quot;随机访问的实现&quot;&gt;随机访问的实现&lt;/h3&gt; &lt;p&gt;例子：长度为10的int型数据int a[] = new int[10];计算机会为数组a[10]分配一块连续的内存空间1000~1039，其中首地址为base_address = 1000;&lt;/p&gt; &lt;p&gt;当计算机要随机访问数组中的某个元素时它会首先通过下面的寻址公式，计算出该元素的存储的内存地址： a[i]_address = base_address + i * data_type_size&lt;/p&gt; &lt;p&gt;这个例子中的int类型是4字节，data_type_size = 4字节。&lt;/p&gt; &lt;h3 id=&quot;误区数组和链表的区别链表适合插入和删除操作时间复杂度是o1数组适合查找查找的时间复杂度是o1&quot;&gt;误区：数组和链表的区别：“链表适合插入和删除操作，时间复杂度是O(1)；数组适合查找，查找的时间复杂度是O(1)”&lt;/h3&gt; &lt;p&gt;解释：数组适合查找操作，但是查找的时间复杂度并不为1.即便是排好序的数组用二分查找时间复杂度也是O(logn)。正确的表述是，数组支持随机访问，根据下标随机访问的时间复杂度是O(1);&lt;/p&gt; &lt;h2 id=&quot;低效的插入和删除&quot;&gt;低效的插入和删除&lt;/h2&gt; &lt;h3 id=&quot;插入操作&quot;&gt;插入操作&lt;/h3&gt; &lt;p&gt;如果在数组的末尾插入元素，则时间复杂度是O(1)，在数组的开头插入，需要把数组依次往后移动一位，所以最坏时间复杂度是O(n)；因为在每个位置插入的概率是一样的，所以平均情况的时间复杂度是(1+2+…+n)/n = O(n)；&lt;/p&gt; &lt;p&gt;如果数组是有序的，则插入操作必须按照刚才的方法搬移数据。但如果数据是无序的，只是作为一个存储数据的集合。在这种情况下在第k个位置插入，只需要把第k位的的数据搬移到数组元素的最后，然后把新的元素直接放入第k个位置。&lt;/p&gt; &lt;p&gt;这种处理思想在快排中有使用。&lt;/p&gt; &lt;h3 id=&quot;删除操作&quot;&gt;删除操作&lt;/h3&gt; &lt;p&gt;和插入类似，删除末尾的元素，时间复杂度是O(1)，删除第一个元素的时间复杂度是O(n)，平均时间复杂度是O(n)。 我们可以先记录下已经删除的数据，每次的删除并不是真正的删除，当数组没有更多的存储空间时，我们在触发一次真正的删除操作，这样就大大的减少；额删除操作导致的数据搬移。&lt;/p&gt; &lt;p&gt;JVM的标记清除垃圾回收算法就是应用的这个思想。 很多时候我们并不是要去死记硬背某个数据结构或算法，而是要学习它背后的思想和处理技巧，这些东西才是最有价值的。&lt;/p&gt; &lt;h2 id=&quot;警惕数组访问越界的问题&quot;&gt;警惕数组访问越界的问题&lt;/h2&gt; &lt;p&gt;数组越界在c语言中是一种未决行为，并没有规定数组访问越界时编译器应该如何处理。因为访问数组的本质就是访问一段连续的内存，只要数组通过偏移计算得到的内存是可用的，那么程序就可能不会报任何错误。这种情况下一般会出现莫名其妙的错误，很多计算机病毒这正是利用数组越界可用访问非法地址的漏洞来攻击系统的。&lt;/p&gt; &lt;p&gt;Java会做越界检查。&lt;/p&gt;...</description>
        <pubDate>Sun, 15 Sep 2019 07:16:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E5%90%AC%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E(4)/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E5%90%AC%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E(4)/</guid>
        
        <tag>数据结构</tag>
        
        <tag>数据结构与算法</tag>
        
        <tag>算法</tag>
        
        <tag>数组</tag>
        
      </item>
    
      <item>
        <title>项目上线小细节注意事项记录</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand: 项目上线了，有一些之前不知道的或者出现比较频繁的需要事情记录一下。&lt;/p&gt; &lt;p&gt;1、IOS预约注册的开放下载时间是当地时间，这个对全球发布的游戏来说，需要注意一下。比如设置是凌晨0点发布，结果是当地时间0点，不是UTC时间。这样加拿大和新西兰比其他地区要早发布。&lt;/p&gt; &lt;p&gt;2、网络问题 全球网络环境复杂多变，需要对这部分进行测试和持续关注。要多注意WIFI访问、4G(5G)等通信网络环境访问、ipv6和ipv4线路访问以及大量玩家在线时的通信状态等。&lt;/p&gt; &lt;p&gt;3、服务器部署问题 这个需要前期测试好自动化部署脚本。这次上线一个很简单的服务器部署步骤给漏了。&lt;/p&gt; &lt;p&gt;4、服务器 要持续关注正式环境中有大量在线人数时，游戏数据通信长度、数据库一次取大量数据、数据库索引问题&lt;/p&gt; &lt;p&gt;5、网关 请求队列的堵塞、排队时间和长度等&lt;/p&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body jektify__body--dark jektify__body--custom&quot; style=&quot;display: block&quot;&gt; &lt;h1 class=&quot;jektify__title jektify__title--dark jektify__user--dark jektify__title--custom&quot; style=&quot;display: none;&quot;&gt;Música&lt;/h1&gt; &lt;p class=&quot;jektify__description jektify__description--dark jektify__description--custom&quot; style=&quot;display: none;&quot;&gt;Jekyll plugin to generate html snippets for embedding Spotify Musics. To listen to the full song, open your Spotify and start these musics. &lt;/p&gt;...</description>
        <pubDate>Sat, 31 Aug 2019 09:10:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E7%BB%93-%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF%E5%B0%8F%E7%BB%86%E8%8A%82%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E8%AE%B0%E5%BD%95/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E7%BB%93-%E9%A1%B9%E7%9B%AE%E4%B8%8A%E7%BA%BF%E5%B0%8F%E7%BB%86%E8%8A%82%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E8%AE%B0%E5%BD%95/</guid>
        
        <tag>项目上线</tag>
        
        <tag>细节</tag>
        
        <tag>注意事项</tag>
        
        <tag>记录</tag>
        
      </item>
    
      <item>
        <title>ARTS挑战第四周</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#arts挑战第四周&quot; id=&quot;markdown-toc-arts挑战第四周&quot;&gt;ARTS挑战第四周&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;h2 id=&quot;arts挑战第四周&quot;&gt;ARTS挑战第四周&lt;/h2&gt; &lt;p&gt;Algorithm: &lt;a href=&quot;http://flyingeye.cn/blog/LeetCode算法题解-Median-of-Two-Sorted-Arrays/&quot; target=&quot;_blank&quot;&gt;LeetCode算法题解-Median of Two Sorted Arrays&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Review: &lt;a href=&quot;http://flyingeye.cn/blog/Unity-Android优化指南2/&quot; target=&quot;_blank&quot;&gt;Unity: Android优化指南(下)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Tip: &lt;a href=&quot;http://flyingeye.cn/blog/工作小结-项目上线小细节注意事项记录/&quot; target=&quot;_blank&quot;&gt;工作小结-项目上线小细节注意事项记录&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Share: &lt;a href=&quot;http://flyingeye.cn/blog/听书笔记-数据结构与算法之美(3)/&quot; target=&quot;_blank&quot;&gt;听书笔记-数据结构与算法之美(3)&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body jektify__body--dark jektify__body--custom&quot; style=&quot;display: block&quot;&gt; &lt;h1 class=&quot;jektify__title jektify__title--dark jektify__user--dark jektify__title--custom&quot; style=&quot;display: none;&quot;&gt;Música&lt;/h1&gt; &lt;p class=&quot;jektify__description jektify__description--dark jektify__description--custom&quot; style=&quot;display: none;&quot;&gt;Jekyll plugin to generate html snippets for embedding...</description>
        <pubDate>Sat, 31 Aug 2019 09:02:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/ARTS%E6%8C%91%E6%88%98%E7%AC%AC%E5%9B%9B%E5%91%A8/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/ARTS%E6%8C%91%E6%88%98%E7%AC%AC%E5%9B%9B%E5%91%A8/</guid>
        
        <tag>ARTS</tag>
        
        <tag>ARTS挑战</tag>
        
        <tag>挑战</tag>
        
      </item>
    
      <item>
        <title>Unity: Android优化指南(下)</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#光照&quot; id=&quot;markdown-toc-光照&quot;&gt;光照&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#烘焙光照&quot; id=&quot;markdown-toc-烘焙光照&quot;&gt;烘焙光照&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#光照探测器&quot; id=&quot;markdown-toc-光照探测器&quot;&gt;光照探测器&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#影子投影器&quot; id=&quot;markdown-toc-影子投影器&quot;&gt;影子投影器&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#阴影&quot; id=&quot;markdown-toc-阴影&quot;&gt;阴影&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#定向光设置&quot; id=&quot;markdown-toc-定向光设置&quot;&gt;定向光设置&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#质量设置&quot; id=&quot;markdown-toc-质量设置&quot;&gt;质量设置&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#像素数量&quot; id=&quot;markdown-toc-像素数量&quot;&gt;像素数量：&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#纹理&quot; id=&quot;markdown-toc-纹理&quot;&gt;纹理&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ui&quot; id=&quot;markdown-toc-ui&quot;&gt;UI&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#sprites&quot; id=&quot;markdown-toc-sprites&quot;&gt;Sprites&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#canvas&quot; id=&quot;markdown-toc-canvas&quot;&gt;Canvas&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#texts--images&quot; id=&quot;markdown-toc-texts--images&quot;&gt;Texts &amp;amp; Images&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#字体&quot; id=&quot;markdown-toc-字体&quot;&gt;字体&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#ui材料&quot; id=&quot;markdown-toc-ui材料&quot;&gt;UI材料&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#rect-mask-2d&quot; id=&quot;markdown-toc-rect-mask-2d&quot;&gt;Rect Mask 2D&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#scroll-rect&quot; id=&quot;markdown-toc-scroll-rect&quot;&gt;Scroll Rect&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#canvas-group-and-menu-animations&quot; id=&quot;markdown-toc-canvas-group-and-menu-animations&quot;&gt;Canvas Group and Menu Animations&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#着色器&quot; id=&quot;markdown-toc-着色器&quot;&gt;着色器&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#结论&quot; id=&quot;markdown-toc-结论&quot;&gt;结论：&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;文章来源：&lt;a href=&quot;https://medium.com/ironequal/android-optimization-with-unity-3504b34f00b0&quot; target=&quot;_blank&quot;&gt;Unity: Android Optimization Guide&lt;/a&gt;&lt;/p&gt; &lt;h4 id=&quot;光照&quot;&gt;光照&lt;/h4&gt; &lt;p&gt;现在开始渲染优化部分！首先，是光照！ 如果可能不要使用动态的光照，而是选择无光照的纹理，因为光照计算会占用很多资源，尤其是要渲染很多对象。&lt;/p&gt; &lt;h4 id=&quot;烘焙光照&quot;&gt;烘焙光照&lt;/h4&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img...</description>
        <pubDate>Sat, 31 Aug 2019 07:53:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/Unity-Android%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%972/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/Unity-Android%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%972/</guid>
        
        <tag>Unity</tag>
        
        <tag>Android</tag>
        
        <tag>优化指南</tag>
        
      </item>
    
      <item>
        <title>LeetCode算法题解-第四道题</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#第二种解法示例解法&quot; id=&quot;markdown-toc-第二种解法示例解法&quot;&gt;第二种解法，示例解法：&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;LeetCode 第四道题: Median of Two Sorted Arrays，难度困难。&lt;/p&gt; &lt;p&gt;There are two sorted arrays nums1 and nums2 of size m and n respectively.&lt;/p&gt; &lt;p&gt;Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).&lt;/p&gt; &lt;p&gt;You may assume nums1 and nums2 cannot be both empty.&lt;/p&gt; &lt;p&gt;Example 1:&lt;/p&gt; &lt;p&gt;nums1 = [1, 3] nums2 = [2]&lt;/p&gt; &lt;p&gt;The median is 2.0 Example 2:&lt;/p&gt; &lt;p&gt;nums1 = [1, 2] nums2 = [3, 4]&lt;/p&gt; &lt;p&gt;The median is (2 + 3)/2 = 2.5&lt;/p&gt; &lt;p&gt;###第一种解法，算法复杂度不满足要求&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;...</description>
        <pubDate>Sat, 31 Aug 2019 07:51:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3-Median-of-Two-Sorted-Arrays/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3-Median-of-Two-Sorted-Arrays/</guid>
        
        <tag>LeetCode</tag>
        
        <tag>算法</tag>
        
      </item>
    
      <item>
        <title>听书笔记：数据结构与算法之美(3)</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#均摊时间复杂度&quot; id=&quot;markdown-toc-均摊时间复杂度&quot;&gt;均摊时间复杂度&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#算法学习书籍&quot; id=&quot;markdown-toc-算法学习书籍&quot;&gt;算法学习书籍&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand: 最好情况时间复杂度、最坏情况时间复杂度、平均情况时间复杂度、均摊时间复杂度&lt;/p&gt; &lt;p&gt;最好情况时间复杂度就是，在最理想的情况下，执行这段代码的时间复杂度。 最坏情况时间复杂度就是，在最糟糕的情况下，执行这段代码的时间复杂度。&lt;/p&gt; &lt;p&gt;平均情况时间复杂度计算:&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/algorithm_1.png&quot; title=&quot;algorithm_1.png&quot; alt=&quot;algorithm_1.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;这个值就是概率论中的加权平均值，也叫期望值，所有平均时间复杂度全称应该叫做加权平均时间复杂度或者期望时间复杂度。&lt;/p&gt; &lt;h4 id=&quot;均摊时间复杂度&quot;&gt;均摊时间复杂度&lt;/h4&gt; &lt;p&gt;分析方法：摊还分析（或叫平摊分析） 应用场景比较特殊，所有不会经常用到。 对一个数据结构进行一组连续的操作，大部分情况下时间复杂度都很低，只有在个别情况下时间复杂度比较高，而且这些操作之间存在前后端的时序关系，这个时候，我们就可以将这一组操作放在一块分析，看是否能将较高时间复杂度那次操作的耗时，平摊到其他那些时间复杂度较低的操作上。而且，在能够应用均摊时间复杂度分析的场合，一般均摊时间复杂度就等于最好情况时间复杂度。 均摊时间复杂度就是一种特殊的平均时间复杂度。&lt;/p&gt; &lt;h4 id=&quot;算法学习书籍&quot;&gt;算法学习书籍&lt;/h4&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/algorithm_2.png&quot; title=&quot;algorithm_2.png&quot; alt=&quot;algorithm_2.png&quot; /&gt; &lt;/div&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body jektify__body--dark...</description>
        <pubDate>Sat, 31 Aug 2019 07:16:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E5%90%AC%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E(3)/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E5%90%AC%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E(3)/</guid>
        
        <tag>数据结构</tag>
        
        <tag>数据结构与算法</tag>
        
        <tag>算法</tag>
        
        <tag>最好情况时间复杂度</tag>
        
        <tag>最坏情况时间复杂度</tag>
        
        <tag>平均情况时间复杂度</tag>
        
        <tag>均摊时间复杂度</tag>
        
      </item>
    
      <item>
        <title>IntelliJ IDEA使用小技巧</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand: 看到有文章分享IntelliJ IDEA的使用小技巧，非常好用，记录之。 1、var 声明&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/IntelliJ_IDEA_1.png&quot; title=&quot;IntelliJ_IDEA_1.png&quot; alt=&quot;IntelliJ_IDEA_1.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;2、null 判空&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/IntelliJ_IDEA_2.png&quot; title=&quot;IntelliJ_IDEA_2.png&quot; alt=&quot;IntelliJ_IDEA_2.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;3、notnull 判非空&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/IntelliJ_IDEA_3.png&quot; title=&quot;IntelliJ_IDEA_3.png&quot; alt=&quot;IntelliJ_IDEA_3.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;4、nn 判非空&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/IntelliJ_IDEA_4.png&quot; title=&quot;IntelliJ_IDEA_4.png&quot; alt=&quot;IntelliJ_IDEA_4.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;5、for 遍历&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/IntelliJ_IDEA_5.png&quot; title=&quot;IntelliJ_IDEA_5.png&quot; alt=&quot;IntelliJ_IDEA_5.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;6、fori 带索引的遍历&lt;/p&gt; &lt;div class=&quot;row...</description>
        <pubDate>Sun, 18 Aug 2019 09:10:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E7%BB%93-IntelliJ-IDEA%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E7%BB%93-IntelliJ-IDEA%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
        
        <tag>IntelliJ  IDEA</tag>
        
        <tag>使用小技巧</tag>
        
        <tag>小技巧</tag>
        
      </item>
    
      <item>
        <title>ARTS挑战第三周</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#arts挑战第三周&quot; id=&quot;markdown-toc-arts挑战第三周&quot;&gt;ARTS挑战第三周&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;h2 id=&quot;arts挑战第三周&quot;&gt;ARTS挑战第三周&lt;/h2&gt; &lt;p&gt;Algorithm: &lt;a href=&quot;http://flyingeye.cn/blog/LeetCode算法题解-Longest-Substring-Without-Repeating-Characters/&quot; target=&quot;_blank&quot;&gt;LeetCode算法题解-Longest Substring Without Repeating Characters&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Review: &lt;a href=&quot;http://flyingeye.cn/blog/Unity-Android优化指南/&quot; target=&quot;_blank&quot;&gt;Unity: Android优化指南(上)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Tip: &lt;a href=&quot;http://flyingeye.cn/blog/工作小结-IntelliJ-IDEA使用小技巧/&quot; target=&quot;_blank&quot;&gt;工作小结-IntelliJ IDEA使用小技巧&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Share: &lt;a href=&quot;http://flyingeye.cn/blog/听书笔记-数据结构与算法之美(2)/&quot; target=&quot;_blank&quot;&gt;听书笔记-数据结构与算法之美(2)&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body jektify__body--dark jektify__body--custom&quot; style=&quot;display: block&quot;&gt; &lt;h1 class=&quot;jektify__title jektify__title--dark jektify__user--dark jektify__title--custom&quot; style=&quot;display: none;&quot;&gt;Música&lt;/h1&gt; &lt;p class=&quot;jektify__description jektify__description--dark jektify__description--custom&quot; style=&quot;display: none;&quot;&gt;Jekyll plugin to generate html snippets for...</description>
        <pubDate>Sun, 18 Aug 2019 09:02:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/ARTS%E6%8C%91%E6%88%98%E7%AC%AC%E4%B8%89%E5%91%A8/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/ARTS%E6%8C%91%E6%88%98%E7%AC%AC%E4%B8%89%E5%91%A8/</guid>
        
        <tag>ARTS</tag>
        
        <tag>ARTS挑战</tag>
        
        <tag>挑战</tag>
        
      </item>
    
      <item>
        <title>Unity: Android优化指南(上)</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;文章来源：&lt;a href=&quot;https://medium.com/ironequal/android-optimization-with-unity-3504b34f00b0&quot; target=&quot;_blank&quot;&gt;Unity: Android Optimization Guide&lt;/a&gt;&lt;/p&gt; &lt;p&gt;一切都很好，直到你意识到缺乏优化会杀死你的游戏。&lt;/p&gt; &lt;p&gt;介绍 就像所有在Unity中工作的人，在Android和Ios项目中，你都会在某些时候遇到性能问题，FPS下降、延迟、延迟等，这些问题会干扰你的游戏甚至会毁掉它。&lt;/p&gt; &lt;p&gt;你可以确定是时候深入你的项目并对其进行优化了。 这是这个指南的摘要，能帮助你更好的导航：&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/Unity-Android_1.png&quot; title=&quot;Unity-Android_1.png&quot; alt=&quot;Unity-Android_1.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;分析你的游戏&lt;/p&gt; &lt;p&gt;Unity分析器 为了观察和分析你的项目性能，你必须使用Unity分析器（Window-&amp;gt;Profile）。它让你直观的看到你的游戏在做什么，什么比较耗时，每帧渲染需要多长时间，什么在消耗你游戏的性能。&lt;/p&gt; &lt;p&gt;它真的很好使用，你仅仅点击点击图形，例如尖峰图，就可以得到帧计算的细节。Unity向你展示花费最多时间的进程。为了更好的理解这些进程，立刻使用Google搜索他们的名字，你将在论坛上发现一篇相关的帖子。&lt;/p&gt; &lt;p&gt;Unity分析器工作在编辑器上，向你展示你的游戏正在做什么，但是要注意它并不代表你的游戏的真实性能。Unity编辑器同时处理其他的进程，而不仅仅是你的进程，因此相比于你的游戏简单编译，它会运行的比较慢。&lt;/p&gt; &lt;p&gt;远程分析器 这就是我们为什么必须编译你的游戏，并且从你的android设备上分析它。 一旦你已经配置了Android SDK和JDK去配置你的项目【https://docs.unity3d.com/Manual/android-sdksetup.html】，你就可以使用远程分析器。 在编译设置里（File-&amp;gt;Build Settings…）,你只需要勾选开发编译和自动连接分析器，并且确定在编辑器设置中（Edit-&amp;gt;Project Setting-&amp;gt;Editor）设备选项要被设置成任何android设备。&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/Unity-Android_2.png&quot; title=&quot;Unity-Android_2.png&quot; alt=&quot;Unity-Android_2.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;现在，你必须在你的设备上启动你的游戏，同时连接到电脑，通常你会在Unity看到分析器窗口，有你设备统计数据。 如果没有，打开分析器窗口，在“Active Profiler”下拉窗口，选择“AndroidPlayer(ADB…)”或者什么。那就是你的设备。&lt;/p&gt; &lt;p&gt;直接分析你的呃设备将给你提供你的游戏性能更准确的信息，所以选择这种方法。&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/Unity-Android_3.png&quot; title=&quot;Unity-Android_3.png&quot; alt=&quot;Unity-Android_3.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;编辑器日志 另一个可以获取构建信息的好工具是打开编辑器日志。在你编译好你的游戏之后打开控制台窗口（Window&amp;gt;Console）,在右上角有个按钮，你可以点击它选择“打开编辑器日志”&lt;/p&gt; &lt;p&gt;它会打开一个有许多构建信息的文档，特别是关于构建大小的信息和占据空间的资产的信息。向下滚动文档，直到你找到像下面这样的内容：&lt;/p&gt; &lt;div class=&quot;row imager&quot; style=&quot;margin: 40px 0px;&quot;&gt; &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/Unity-Android_4.png&quot; title=&quot;Unity-Android_4.png&quot; alt=&quot;Unity-Android_4.png&quot; /&gt; &lt;/div&gt; &lt;p&gt;定期在不同设备上测试...</description>
        <pubDate>Sun, 18 Aug 2019 07:53:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/Unity-Android%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/Unity-Android%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97/</guid>
        
        <tag>Unity</tag>
        
        <tag>Android</tag>
        
        <tag>优化指南</tag>
        
      </item>
    
      <item>
        <title>LeetCode算法题解-第三道题</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;LeetCode 第三道题: Longest Substring Without Repeating Characters，难度中等。&lt;/p&gt; &lt;p&gt;Given a string, find the length of the longest substring without repeating characters. Example 1: Input: “abcabcbb” Output: 3 Explanation: The answer is “abc”, with the length of 3.&lt;/p&gt; &lt;p&gt;Example 2: Input: “bbbbb” Output: 1 Explanation: The answer is “b”, with the length of 1.&lt;/p&gt; &lt;p&gt;Example 3: Input: “pwwkew” Output: 3 Explanation: The answer is “wke”, with the length of 3. Note that the answer must be a substring, “pwke” is a subsequence and not a substring.&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span...</description>
        <pubDate>Sun, 18 Aug 2019 07:51:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3-Longest-Substring-Without-Repeating-Characters/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3-Longest-Substring-Without-Repeating-Characters/</guid>
        
        <tag>LeetCode</tag>
        
        <tag>算法</tag>
        
      </item>
    
      <item>
        <title>听书笔记：数据结构与算法之美(2)</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#复杂度分析方法&quot; id=&quot;markdown-toc-复杂度分析方法&quot;&gt;复杂度分析方法&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#大o复杂度分析法&quot; id=&quot;markdown-toc-大o复杂度分析法&quot;&gt;大O复杂度分析法&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#时间复杂度分析实用方法&quot; id=&quot;markdown-toc-时间复杂度分析实用方法&quot;&gt;时间复杂度分析实用方法&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#几种常见的时间复杂度实例分析&quot; id=&quot;markdown-toc-几种常见的时间复杂度实例分析&quot;&gt;几种常见的时间复杂度实例分析&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#多项式量级&quot; id=&quot;markdown-toc-多项式量级&quot;&gt;多项式量级&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#非多项式量级&quot; id=&quot;markdown-toc-非多项式量级&quot;&gt;非多项式量级&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;h2 id=&quot;复杂度分析方法&quot;&gt;复杂度分析方法&lt;/h2&gt; &lt;p&gt;复杂度分析是整个算法学习的精髓，只要掌握了它，数据结构和算法的内容基本上就掌握了一半。&lt;/p&gt; &lt;p&gt;###为什么需要复杂度分析&lt;/p&gt; &lt;p&gt;1、测试结果非常依赖测试环境&lt;/p&gt; &lt;p&gt;测试环境中的硬件的不同对测试结果有很大的影响。&lt;/p&gt; &lt;p&gt;2、测试结果受数据规模的影响很大&lt;/p&gt; &lt;p&gt;比如排序算法，排序数据的有序度不一样，排序的执行时间就会有很大的差别。除此之外，如果数据规模太小，测试结果可能无法真实地反应算法的性能。比如对于规模小的数据排序，插入排序可能反而比快速排序要快。&lt;/p&gt; &lt;p&gt;所有我需要一个不用具体的测试数据来测试就可以粗略估计算法的执行效率的方法。&lt;/p&gt; &lt;h3 id=&quot;大o复杂度分析法&quot;&gt;大O复杂度分析法&lt;/h3&gt; &lt;p&gt;算法的执行效率粗略的讲就是算法代码的执行时间。尽管每行代码对应的CPU执行的个数、执行的时间不一样，但是我们这里是粗略的估计，所以可以假设每行代码执行的时间都一样，为unit_time。&lt;/p&gt; &lt;p&gt;所有代码的执行时间T(n)与每行代码的执行次数成正比，即T(n) = O(f(n))。 大O时间复杂度表示法，并不具体表示代码的真正执行时间，而是表示代码执行时间随数据规模增长的变化趋势，所以也叫做渐进时间复杂度，简称时间复杂度。&lt;/p&gt; &lt;h3 id=&quot;时间复杂度分析实用方法&quot;&gt;时间复杂度分析实用方法&lt;/h3&gt; &lt;p&gt;1、只关注循环执行次数做多的一段代码 2、加法法则：总复杂度等于量级最大的那段代码的复杂度 3、乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积。&lt;/p&gt; &lt;h3 id=&quot;几种常见的时间复杂度实例分析&quot;&gt;几种常见的时间复杂度实例分析&lt;/h3&gt; &lt;h4 id=&quot;多项式量级&quot;&gt;多项式量级&lt;/h4&gt; &lt;p&gt;1、常量阶 O(1)&lt;/p&gt; &lt;p&gt;一般情况下，只要算法中不存在循环的语句、递归的语句，即使有成千上万行代码，其时间复杂度也是O(1) 2、对数阶 O(logn) 3、线性对数阶 O(nlogn)&lt;/p&gt; &lt;p&gt;在采用大O标记复杂度的时候，可以忽略系数，即O(Cf(n)) = O(f(n)) 4、平方阶 O(n^2) 立方阶O(n^3) …. k次方阶O(n^k)&lt;/p&gt; &lt;h4 id=&quot;非多项式量级&quot;&gt;非多项式量级&lt;/h4&gt; &lt;p&gt;5、质数阶O(2^n) 6、阶乘阶O(n!) 非多项式量级的算法问题叫作NP(Non-Deterministic Polynomial, 非确定多项式)问题 当数据规模n越来越大的时，非多项式量级算法的执行时间会急剧增加，是非常低效的算法。&lt;/p&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt;...</description>
        <pubDate>Sun, 18 Aug 2019 07:16:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E5%90%AC%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E(2)/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E5%90%AC%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E(2)/</guid>
        
        <tag>数据结构</tag>
        
        <tag>数据结构与算法</tag>
        
        <tag>算法</tag>
        
        <tag>集成</tag>
        
      </item>
    
      <item>
        <title>Unity-RectTransform中localPosition与anchoredPosition的区别</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;Unity version 版本2018.2.14f1 设置ui的anchoredPosition时候，发现不能设置到想要的位置，后来发现在当Anchors的Min和Max都设置为(0.5, 0.5)时，才会正确的。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Inspector面板中Transform的位置信息显示的是localPosition, 表示的是子物体的pivot相对于父物体的pivot的座标&lt;/li&gt; &lt;li&gt;Inspector面板中RectTransform的位置信息显示的是anchoredPosition3D, anchoredPosition3D表示的是子物体的pivot相对于anchor的座标，当anchor不是一个点时表示前3个元素（left，top，z）&lt;/li&gt; &lt;li&gt;当子物体的anchor与父物体的pivot座标重合时anchoredPosition3D与localPosition相等&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body jektify__body--dark jektify__body--custom&quot; style=&quot;display: block&quot;&gt; &lt;h1 class=&quot;jektify__title jektify__title--dark jektify__user--dark jektify__title--custom&quot; style=&quot;display: none;&quot;&gt;Música&lt;/h1&gt; &lt;p class=&quot;jektify__description jektify__description--dark jektify__description--custom&quot; style=&quot;display: none;&quot;&gt;Jekyll plugin to generate html snippets for embedding Spotify Musics. To listen to the full song, open your Spotify and start these...</description>
        <pubDate>Sun, 04 Aug 2019 09:10:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E7%BB%93-Unity-RectTransform%E4%B8%ADlocalPosition%E4%B8%8EanchoredPosition%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E7%BB%93-Unity-RectTransform%E4%B8%ADlocalPosition%E4%B8%8EanchoredPosition%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
        
        <tag>RectTransform</tag>
        
        <tag>localPosition</tag>
        
        <tag>anchoredPosition</tag>
        
        <tag>区别</tag>
        
      </item>
    
      <item>
        <title>ARTS挑战第二周</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#arts挑战第二周&quot; id=&quot;markdown-toc-arts挑战第二周&quot;&gt;ARTS挑战第二周&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;h2 id=&quot;arts挑战第二周&quot;&gt;ARTS挑战第二周&lt;/h2&gt; &lt;p&gt;Algorithm: &lt;a href=&quot;http://flyingeye.cn/blog/LeetCode算法题解-Add-Two-Numbers/&quot; target=&quot;_blank&quot;&gt;LeetCode算法题解-Add Two Numbers&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Review: &lt;a href=&quot;http://flyingeye.cn/blog/技术文章翻译-在开始商业游戏之前需要定义的8个关键点/&quot; target=&quot;_blank&quot;&gt;技术文章翻译-在开始商业游戏之前需要定义的8个关键点&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Tip: &lt;a href=&quot;http://flyingeye.cn/blog/工作小结-Unity-RectTransform中localPosition与anchoredPosition的区别/&quot; target=&quot;_blank&quot;&gt;工作小结-Unity-RectTransform中localPosition与anchoredPosition的区别&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Share: &lt;a href=&quot;http://flyingeye.cn/blog/听书笔记-数据结构与算法之美(1)/&quot; target=&quot;_blank&quot;&gt;听书笔记-数据结构与算法之美(1)&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body jektify__body--dark jektify__body--custom&quot; style=&quot;display: block&quot;&gt; &lt;h1 class=&quot;jektify__title jektify__title--dark jektify__user--dark jektify__title--custom&quot; style=&quot;display: none;&quot;&gt;Música&lt;/h1&gt; &lt;p class=&quot;jektify__description jektify__description--dark jektify__description--custom&quot; style=&quot;display: none;&quot;&gt;Jekyll plugin to generate html snippets for embedding Spotify Musics. To...</description>
        <pubDate>Sun, 04 Aug 2019 09:02:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/ARTS%E6%8C%91%E6%88%98%E7%AC%AC%E4%BA%8C%E5%91%A8/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/ARTS%E6%8C%91%E6%88%98%E7%AC%AC%E4%BA%8C%E5%91%A8/</guid>
        
        <tag>ARTS</tag>
        
        <tag>ARTS挑战</tag>
        
        <tag>挑战</tag>
        
      </item>
    
      <item>
        <title>在开始商业游戏之前需要定义的8个关键点</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;文章来源：&lt;a href=&quot;https://medium.com/ironequal/8-crucial-points-to-define-before-starting-a-commercial-game-135024fc8130&quot; target=&quot;_blank&quot;&gt;8 crucial points to define before starting a commercial game&lt;/a&gt;&lt;/p&gt; &lt;p&gt;这篇博客文章只是我们内部指导的一个很简单的部分，它试图去面对一个现实：如何让一家公司和5个人继续生存下去。这并不完美，而且不能保证什么。。。。你的公司仍旧有可能下沉。 我们目前正在决定在REPULSE: Galactic Rivals之后我们将制作什么游戏。MAZE的团队仍旧在研发MAZE，不用担心。&lt;/p&gt; &lt;p&gt;由于我们必须负担公司的所有费用，需要吃饭和支付私人飞机机库的费用，我们显然对游戏的未来雄心勃勃。在这个想法中，我将和你们分享我们的过程，以及在开始大规模投资到一个产品之前我们必须要考虑的事情。 制作一款非商业目的的游戏是完全可以的，但请不要再我的Twitter上抱怨你有多穷，或者游戏产业没有钱。&lt;/p&gt; &lt;p&gt;1、所有的一切开始于乐趣和创造性 很明显我们的第一步是乱搞一些原型来运行，看看是否有一些有趣的潜力。 如果你对你的第一个原型很满意，那么是时候定义一些东西了，这些东西可以让你的开发保持健康发展，并能检验是不是有商业潜力。 永远要记住，在你设计之初记录的内容是要更改的。&lt;/p&gt; &lt;p&gt;2、设计+故事 当你已经通过原型验证了一些设计点，是时候把它们记录下来了。你应该定义你的意图是什么，你想制作什么样的游戏，并详细描述你的设计组件、机制，背景故事/环境，节奏，并尝试开始一个游戏循环。这将帮助你在接下来的几个月研发后不会迷失方向，并且能清除的识别你是否开始改变游戏的核心内容。 列出你的选项可以帮助你更加了解他们，并和团队分享他们。&lt;/p&gt; &lt;p&gt;3、美术和音效 在这里，你将要定义你的美术风格，你想要给你的产品的定位，色彩等等。你也可以谈谈你对音乐和音效的设计的意图和灵感。 我们确实把美术和设计分开了，但是只是为了表现的目的。永远记住，在游戏中美术服务于设计，设计服务于美术。&lt;/p&gt; &lt;p&gt;4、市场调研 找到你的受众并不是仅仅随便找一个人，也不是为了最终推广你的游戏。&lt;/p&gt; &lt;p&gt;定义和研究你的受众对于做设计和美术决策是很重要的。这使你站在你的玩家的立场上考虑问题。 你的核心用户必须必诸如Dota玩家、FPS玩家或硬核玩家更精确。你的核心用户是你的游戏机制、你的故事和你的美术风格的交集。 当你研究你的用户的时候，不要带着偏见。你可以让数据告诉你很多事情。制作一款小众游戏是可以的。不要这样做。&lt;/p&gt; &lt;p&gt;5、产品 在这里你将要定义项目的范围和潜在的回溯计划。你可以将你的范围划分为3部分：核心游戏玩法、功能和内容。功能为游戏增加价值和乐趣，但是不应该是至关重要的。记住，你不能靠着功能来拯救游戏。&lt;/p&gt; &lt;p&gt;根据你的资金和计划，内容可能是最具有可扩展性的。但是要尽量定义一个能使游戏有趣的最小的内容量。&lt;/p&gt; &lt;p&gt;例如，在Subscribe &amp;amp; Punch（一款2D战斗游戏），我们将游戏角色最小数量定位为4个，以保持游戏的趣味性。如果有更多的时间和/或着资金，我们可以制作6个、8个甚至更多个角色！&lt;/p&gt; &lt;p&gt;内容也是将DLC硬塞给玩家的最简单方法，但添加的功能可能会带来更高的感知价值（或者修复你的核心玩法，但是如果你已经做到了这一点，你就不应该在媒体上浪费时间）&lt;/p&gt; &lt;p&gt;根据你的范围和计划，你可以根据团队和预算来指定你的需求。如果你没有足够的钱去创造你所设想的游戏，请不要愚蠢的消减你的游戏。试着真正的看看你是如何才能用你所拥有的资金创造出一款全新有趣的游戏。&lt;/p&gt; &lt;p&gt;6、挑战 尽早列出你最大的挑战是什么，这一点很重要。这将极大的帮助你避免他们。你还可以定义一些KPI,这些KPI将允许你能度量你再这些挑战中的表现。&lt;/p&gt; &lt;p&gt;大部分时间保持乐观是很重要的，但不是在这里。 不要欺骗自己，尽可能理性的找出可能出错的地方。&lt;/p&gt; &lt;p&gt;7、营销和沟通 你可以定义你将在哪些平台上推广你的游戏，并且列出潜在的受众（这可以帮助你定义你的目标）。同时，考虑一下你再游戏中所使用的语气，它能反映出游戏的整体内容。 尽可能快、持续的沟通。没有人会偷走你的游戏，如果真的发生了，那就创造一个更好的。&lt;/p&gt; &lt;p&gt;8、业务 在这里，在考虑你的游戏范围和受众的同时，你可以设置一下你的价格目标。不要太高，也不要太低。你的游戏需要看起来对玩家有价值。你也可以定义你想要发布游戏的平台。根据之前的所有信息，你能计算出需要卖出多少才能实现收支平衡。&lt;/p&gt; &lt;p&gt;以独特的卖点收尾。你的游戏怎么样了？&lt;/p&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd...</description>
        <pubDate>Sun, 04 Aug 2019 07:53:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E7%BF%BB%E8%AF%91-%E5%9C%A8%E5%BC%80%E5%A7%8B%E5%95%86%E4%B8%9A%E6%B8%B8%E6%88%8F%E4%B9%8B%E5%89%8D%E9%9C%80%E8%A6%81%E5%AE%9A%E4%B9%89%E7%9A%848%E4%B8%AA%E5%85%B3%E9%94%AE%E7%82%B9/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E7%BF%BB%E8%AF%91-%E5%9C%A8%E5%BC%80%E5%A7%8B%E5%95%86%E4%B8%9A%E6%B8%B8%E6%88%8F%E4%B9%8B%E5%89%8D%E9%9C%80%E8%A6%81%E5%AE%9A%E4%B9%89%E7%9A%848%E4%B8%AA%E5%85%B3%E9%94%AE%E7%82%B9/</guid>
        
        <tag>游戏开发</tag>
        
        <tag>商业游戏</tag>
        
        <tag>8个关键点</tag>
        
      </item>
    
      <item>
        <title>LeetCode算法题解</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;LeetCode 第二道题: Add Two Numbers，难度简单。&lt;/p&gt; &lt;p&gt;You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. Example: Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4) Output: 7 -&amp;gt; 0 -&amp;gt; 81 Explanation: 342 + 465 = 807.&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1...</description>
        <pubDate>Sun, 04 Aug 2019 07:51:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3-Add-Two-Numbers/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3-Add-Two-Numbers/</guid>
        
        <tag>LeetCode</tag>
        
        <tag>算法</tag>
        
      </item>
    
      <item>
        <title>听书笔记：数据结构与算法之美(1)</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#第一节-为什么学习数据结构和算法&quot; id=&quot;markdown-toc-第一节-为什么学习数据结构和算法&quot;&gt;第一节 为什么学习数据结构和算法&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#第二节-如何抓住重点系统高效上午学习数据结构与算法&quot; id=&quot;markdown-toc-第二节-如何抓住重点系统高效上午学习数据结构与算法&quot;&gt;第二节 如何抓住重点、系统高效上午学习数据结构与算法&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;从今天开始学习极客时间王争老师的数据结构与算法之美专栏，并记录笔记。&lt;/p&gt; &lt;h2 id=&quot;第一节-为什么学习数据结构和算法&quot;&gt;第一节 为什么学习数据结构和算法&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;找工作： 校招的时候，参加面试的同学没有通常没有实际项目经验，公司只能考察他们的基础知识是否牢固。社招就更不用说了，越是厉害的公司越是注重考察数据结构和算法这种基础类的知识。相对于短期的能力，他们更看重你的长期能力。&lt;/li&gt; &lt;li&gt;工作后 （1）我们学习任何知识都是为了“用”的，是为了解决实际工作问题的。 （2）业务开发，虽然平时都只是做增删改查或者使用已经封装好的API接口、类库来堆砌、翻译业务逻辑，很少用到数据结构和算法，但是不需要自己实现并不代表什么都不需要了解。 在我们使用的各种框架中，一般都揉和了很多基础数据结构和算法的设计思想。掌握数据结构和算法，不管对于了解框架源码还是理解其背后的设计思想，都是非常有用的。 如果能明白接口、类库的底层原理，就能更好的使用它们。 （3）基础架构研发工程师，写出达到开源水平的框架才是你的目标。&lt;/li&gt; &lt;li&gt;编程能力 性能好坏起码是其中的一个判断标准。 掌握了数据结构和算法，你看待问题的深度，解决问题的角度就会完全不一样。&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;第二节-如何抓住重点系统高效上午学习数据结构与算法&quot;&gt;第二节 如何抓住重点、系统高效上午学习数据结构与算法&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;什么是数据结构和算法 （1）广义上：数据结构是一组数据的存储方式，算法是作用在数据结构上的一组操作方法。 （2）狭义上：是指一些著名的数据结构和算法。 （3）数据结构是服务于算法的，算法是作用在特定的数据结构之上的。&lt;/li&gt; &lt;li&gt;算法时间复杂度分析&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;这个几乎占了数据结构和算法这门课的半壁江山，是数据结构和算法学习的精髓。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;20个最常用、最基础的数据结构和算法 初学者学习算法的重点是掌握这20个最常用、最基础的数据结构和算法，不管是应付面试还是工作需要，只要集中精力逐一攻克这20个知识点就足够了。 这里面有10个数据结构：数据、链表、栈、队列、散列表、二叉树、堆、图、跳表、Trie树；10个算法：递归、排序、二分查找、搜索、哈希算法、贪心算法、分治算法、回溯算法、动态规划、字符串匹配算法。 学习过程中不要死记硬背，不要为了学习而学习，要学习它的来历、自身的特点、适合解决的问题以及实际应用场景。 4.学习技巧 （1）边学边练，适度刷题。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;可以适度刷题，但一定不要浪费太多时间在刷题上。学习的目的还是掌握，然后应用。除非面试的是facebook、google这样的公司 （2）多问、多思考、多互动 （3）打怪升级法&lt;/p&gt; &lt;p&gt;我们在枯燥的学习过程中，可以给自己设定一个切实可行的目标。 （4）知识沉淀 学习知识的过程就是反复迭代、不断沉淀的过程。&lt;/p&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body...</description>
        <pubDate>Sun, 04 Aug 2019 07:16:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E5%90%AC%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E(1)/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E5%90%AC%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E(1)/</guid>
        
        <tag>数据结构</tag>
        
        <tag>数据结构与算法</tag>
        
        <tag>算法</tag>
        
        <tag>集成</tag>
        
      </item>
    
      <item>
        <title>ARTS挑战第一周</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#arts挑战第一周&quot; id=&quot;markdown-toc-arts挑战第一周&quot;&gt;ARTS挑战第一周&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;h2 id=&quot;arts挑战第一周&quot;&gt;ARTS挑战第一周&lt;/h2&gt; &lt;p&gt;Algorithm: &lt;a href=&quot;http://flyingeye.cn/blog/LeetCode算法题解-Two-Sum&quot; target=&quot;_blank&quot;&gt;LeetCode算法题解-Two-Sum&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Review: &lt;a href=&quot;http://flyingeye.cn/blog/技术文章翻译-游戏开发和unity初学者的8条建议&quot; target=&quot;_blank&quot;&gt;技术文章翻译-游戏开发和unity初学者的8条建议&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Tip: &lt;a href=&quot;http://flyingeye.cn/blog/工作小结-正则表达式小工具&quot; target=&quot;_blank&quot;&gt;工作小结-正则表达式小工具&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Share: &lt;a href=&quot;http://flyingeye.cn/blog/思考-持续集成&quot; target=&quot;_blank&quot;&gt;思考-持续集成&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body jektify__body--dark jektify__body--custom&quot; style=&quot;display: block&quot;&gt; &lt;h1 class=&quot;jektify__title jektify__title--dark jektify__user--dark jektify__title--custom&quot; style=&quot;display: none;&quot;&gt;Música&lt;/h1&gt; &lt;p class=&quot;jektify__description jektify__description--dark jektify__description--custom&quot; style=&quot;display: none;&quot;&gt;Jekyll plugin to generate html snippets for embedding Spotify Musics. To listen to...</description>
        <pubDate>Sun, 21 Jul 2019 17:02:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/ARTS%E6%8C%91%E6%88%98%E7%AC%AC%E4%B8%80%E5%91%A8/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/ARTS%E6%8C%91%E6%88%98%E7%AC%AC%E4%B8%80%E5%91%A8/</guid>
        
        <tag>ARTS</tag>
        
        <tag>ARTS挑战</tag>
        
        <tag>挑战</tag>
        
      </item>
    
      <item>
        <title>思考：持续集成</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#为什么要持续集成&quot; id=&quot;markdown-toc-为什么要持续集成&quot;&gt;为什么要持续集成&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#什么是持续集成&quot; id=&quot;markdown-toc-什么是持续集成&quot;&gt;什么是持续集成&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#持续集成的好处&quot; id=&quot;markdown-toc-持续集成的好处&quot;&gt;持续集成的好处&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;h2 id=&quot;为什么要持续集成&quot;&gt;为什么要持续集成&lt;/h2&gt; &lt;p&gt;在开始这个话题之前，我们来回忆一下在日常的开发发布的时候经常会出现的情况： 在产品上线前夕，也是很多公司最繁忙的时候。已经凌晨了，办公室内仍然热火朝天。测试同学不断的喊着某个开发同学的名字，这里是怎么了？怎么不好用了，之前不是好好的？jira上的Bug列表如泉涌般出现了各种各样的问题。研发同学焦头烂额，不断的去查看一个又一个bug。好的情况是终于搞定了所有问题，抬起木木的脑袋（都感觉不到是自己的了）看向窗外，东方已经泛起了鱼肚白，又是一个不眠之夜。不断的解决这些问题，攻城拔寨，终于能保证如期上线了，想想还有点成就感呢。但凡是也有例外，坏的情况是最终也没有解决完问题，尤其是有那么一些疑难杂症，项目上线只好延期。&lt;/p&gt; &lt;p&gt;面对领导的诘问，只能说：开发完在开发环境（或app模拟器）测试时完全正常的啊。。。。&lt;/p&gt; &lt;p&gt;这是经常会出现的场景，我们按部就班的在测试环境中开发产品，测试在测试环境中测试，到最后到了最后阶段，要上线了，环境变了，各种问题都出现了。要么是设备和模拟器的差异造成的，要么是某个参数设置有问题等等。&lt;/p&gt; &lt;p&gt;总而言之，这样传统的工作方式有以下问题：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;最后在生产环境中会出现各种各样的bug&lt;/li&gt; &lt;li&gt;软件交付、产品上线时间无法保证&lt;/li&gt; &lt;li&gt;项目后期，比如性能问题等越难以解决。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;而持续集成就是为了防止这种事情的发生。&lt;/p&gt; &lt;h2 id=&quot;什么是持续集成&quot;&gt;什么是持续集成&lt;/h2&gt; &lt;p&gt;在软件工程中，持续集成（CI）是指将所有开发者的工作副本每天多次合并到主干的做法。Grady Booch 在1991年的 Booch method 中首次命名并提出了 CI 的概念，尽管在当时他并不主张每天多次集成。而 XP（Extreme programming，极限编程）采用了 CI 的概念，并提倡每天不止一次集成。&lt;/p&gt; &lt;h2 id=&quot;持续集成的好处&quot;&gt;持续集成的好处&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;集成的任意环节都是自动完成，无需人工太多干预&lt;/li&gt; &lt;li&gt;能尽快发现软件的集成问题（因为频繁集成，每一次集成就有可能发现集成问题）&lt;/li&gt; &lt;li&gt;能很快适应需求变更（经常变更需求真的很烦）&lt;/li&gt; &lt;li&gt;减少管理风险&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body jektify__body--dark jektify__body--custom&quot; style=&quot;display: block&quot;&gt; &lt;h1 class=&quot;jektify__title...</description>
        <pubDate>Sun, 21 Jul 2019 16:16:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E6%80%9D%E8%80%83-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E6%80%9D%E8%80%83-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</guid>
        
        <tag>思考</tag>
        
        <tag>持续集成</tag>
        
        <tag>持续</tag>
        
        <tag>集成</tag>
        
      </item>
    
      <item>
        <title>工作小结-正则表达式小工具.</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;在编程工作中难免会遇到使用正则表达式的情况，但它又比较晦涩，不像普通的代码能清晰明了。 有时自己写了一段正则表达式，都不知道能不能匹配成功。 因为我工作中经常使用到JetBrains公司的系列产品，诸如webStorm、PHPStorm、Rider等。发现在搜索的时候(ctrl+f或commond+f)在搜索栏右侧有个Regex选项，勾选之后，可以输入正则表达式，很方便的即时检验你所写的代码的正确性。&lt;/p&gt; &lt;h2 id=&quot;gist-code&quot;&gt;Gist code&lt;/h2&gt; &lt;script src=&quot;https://gist.github.com/a3672f19f0f2ac35810b.js&quot;&gt; &lt;/script&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;To use, see:&lt;a href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;Jektify - Doc&lt;/a&gt;&lt;/p&gt; &lt;dl class=&quot;jektify jektify--dark jektify--custom&quot;&gt; &lt;dt class=&quot;jektify__header jektify__header--dark jektify__header--custom&quot;&gt; &lt;a class=&quot;jektify__brand jektify__brand--dark jektify__brand--custom&quot; href=&quot;https://jektify.github.io&quot; target=&quot;_blank&quot;&gt;jektify&lt;/a&gt; &lt;i class=&quot;jektify__year jektify__year--dark jektify__year--custom&quot;&gt;&amp;copy;&amp;nbsp;2019&amp;nbsp;&lt;/i&gt; &lt;span class=&quot;jektify__button jektify__button--dark jektify__button--custom jektify__button--open&quot;&gt;+&lt;/span&gt; &lt;/dt&gt; &lt;dd class=&quot;jektify__body jektify__body--dark jektify__body--custom&quot; style=&quot;display: block&quot;&gt; &lt;h1 class=&quot;jektify__title jektify__title--dark jektify__user--dark jektify__title--custom&quot; style=&quot;display: none;&quot;&gt;Música&lt;/h1&gt; &lt;p class=&quot;jektify__description jektify__description--dark jektify__description--custom&quot; style=&quot;display: none;&quot;&gt;Jekyll plugin to generate html snippets for embedding Spotify Musics. To listen to the full song, open your Spotify and start these musics. &lt;/p&gt; &lt;div class=&quot;jektify__tracklist jektify__tracklist--dark jektify__tracklist--custom&quot;&gt; &lt;iframe id=&quot;jektify__track&quot; class=&quot;jektify__track...</description>
        <pubDate>Sun, 21 Jul 2019 16:10:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E7%BB%93-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%B0%8F%E5%B7%A5%E5%85%B7/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E5%B7%A5%E4%BD%9C%E5%B0%8F%E7%BB%93-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%B0%8F%E5%B7%A5%E5%85%B7/</guid>
        
        <tag>工作小结</tag>
        
        <tag>正则表达式</tag>
        
        <tag>小工具</tag>
        
      </item>
    
      <item>
        <title>游戏开发和unity初学者的8条建议</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#1不要重复造轮子使用内置的引擎工具&quot; id=&quot;markdown-toc-1不要重复造轮子使用内置的引擎工具&quot;&gt;1、不要重复造轮子，使用内置的引擎工具。&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#2谷歌是你的朋友文档也是&quot; id=&quot;markdown-toc-2谷歌是你的朋友文档也是&quot;&gt;2、谷歌是你的朋友，文档也是&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#3跟其他人分享你的经验&quot; id=&quot;markdown-toc-3跟其他人分享你的经验&quot;&gt;3、跟其他人分享你的经验&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#4做game-jams-游戏开发者在很短的一段时间内规划设计和创建一个或多个游戏&quot; id=&quot;markdown-toc-4做game-jams-游戏开发者在很短的一段时间内规划设计和创建一个或多个游戏&quot;&gt;4、做Game Jams (游戏开发者在很短的一段时间内规划、设计、和创建一个或多个游戏)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#5不断的重新评估你的工作&quot; id=&quot;markdown-toc-5不断的重新评估你的工作&quot;&gt;5、不断的重新评估你的工作&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#6系统条理和严谨&quot; id=&quot;markdown-toc-6系统条理和严谨&quot;&gt;6、系统条理和严谨&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#7使用版本管理工具&quot; id=&quot;markdown-toc-7使用版本管理工具&quot;&gt;7、使用版本管理工具&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#8插件可以节省你的时间&quot; id=&quot;markdown-toc-8插件可以节省你的时间&quot;&gt;8、插件可以节省你的时间&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;文章来源：&lt;a href=&quot;https://medium.com/ironequal/8-gamedev-unity-essential-beginner-tips-a80d80a8ae78&quot; target=&quot;_blank&quot;&gt;8 Gamedev &amp;amp; Unity Essential Beginner Tips!&lt;/a&gt;&lt;/p&gt; &lt;p&gt;想要了解怎样快速学习游戏编程？ 去做游戏。 这里是几点建议帮助你： Hi,我是Keryann,一个在IronEqual工作的年轻人，现在正在开发REPULSE: Galactic Rivals。 这个项目开始于一年多以前。对于一款小范围的游戏来说，这个时间似乎是真的很长了，但是当我开始开发这款游戏的时候，我几乎没有游戏开发的知识。所以在整个项目中，我学习了游戏编程以及Unity的工作流。 我想把我学到并且现在每天都在使用的东西写下来和你们分享：&lt;/p&gt; &lt;h2 id=&quot;1不要重复造轮子使用内置的引擎工具&quot;&gt;1、不要重复造轮子，使用内置的引擎工具。&lt;/h2&gt; &lt;p&gt;在使用任何一款游戏引擎的时候，比如Unity或者是虚幻引擎，一些开发者（主要是来自计算机科学领域的）倾向于埋头开始开发大型算法或数据结构，而不去了解它们是不是在引擎中已经存在。 我想到了一些例子，比如一些开发人员阐释去重写Unity的动画器，甚至是基础的寻路系统。&lt;/p&gt; &lt;p&gt;当然，既是了解游戏引擎，也可以编写自己的工具使它们更适合你的项目，这样能节省你很多时间、也能弥补引擎的缺陷。 但是请记住，对于一个学习游戏开发的人来说，了解引擎所能提供的所有可能的工具是很重要的。知道了这些知识，就可以选择哪些工具可以去学习，哪些工具需要从头开始创造。&lt;/p&gt; &lt;h2 id=&quot;2谷歌是你的朋友文档也是&quot;&gt;2、谷歌是你的朋友，文档也是&lt;/h2&gt; &lt;p&gt;一旦你开始了你的游戏创作，在很多事情上，你会遇到很多问题，缺乏经验去解决。当你遇到这样的事情时，你的第一反应应该是查看文档（查看Unity的和虚幻引擎的）。 游戏引擎文档可能会很厚，但真的非常有用。它可以回答你大部分关于游戏组件的大部分问题，让你访问API文档，帮助你确定一个特定的语法，而最重要的是，它可以帮助你描述你遇到的问题。&lt;/p&gt; &lt;p&gt;这些都是为了召唤我们最好的朋友：谷歌！ 无论你问什么样的问题，你都会发现有人已经问过了并且给出了答案。这真的是一个能够找到你遇到的任何问题 的解决方案的利器。&lt;/p&gt; &lt;p&gt;能否帮助你的主要网站，特别是Unity：answers.unity3d.com, stackoverflow.com 还有gamedev.stackexchange.com.&lt;/p&gt; &lt;h2 id=&quot;3跟其他人分享你的经验&quot;&gt;3、跟其他人分享你的经验&lt;/h2&gt; &lt;p&gt;帮助和灵感，当然还有其他的一些创意的另一个更重要的来源是来自你周围或者是在网上。（原文：Another great source of help and inspiration is of course other creatives, from your surroundings or on the internet. ）事实上，游戏开发像其他的活动一样可以有很多形式和项目，所有你总是会学到一些东西。 所以，为了最大化你的学习进程，你需要从别人的经验和失败中汲取营养。&lt;/p&gt; &lt;p&gt;分享你的工作。至少你会有一次愉快的交流，最好的情况是你会学到改进及当前的或未来的工作的方法。&lt;/p&gt; &lt;h2 id=&quot;4做game-jams-游戏开发者在很短的一段时间内规划设计和创建一个或多个游戏&quot;&gt;4、做Game Jams (游戏开发者在很短的一段时间内规划、设计、和创建一个或多个游戏)&lt;/h2&gt; &lt;p&gt;游戏jam不仅仅是一个了解游戏开发的一种方法，而且是一种能刺激你的思维和技能的重要工具。 游戏jam的过程并不是经典的游戏开发，但这就是它的全部力量。事实上，因为它会发生在一个非常短的固定的时间内，你必须快读原型化、思考、并作出决定。另外，你应该着眼于游戏机制的基础要素，并保持它的简单性（当你在编写更大的游戏时，这个技巧也是适用的）。&lt;/p&gt; &lt;p&gt;实验心得功能特性、用新的东西测试你的技能、甚至是简单的尝试和失败，这都是一个很棒的练习。&lt;/p&gt; &lt;p&gt;你可以让自己重新振作，在一个长期的项目上休息一下。&lt;/p&gt;...</description>
        <pubDate>Sun, 21 Jul 2019 15:53:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E7%BF%BB%E8%AF%91-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%92%8Cunity%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%848%E6%9D%A1%E5%BB%BA%E8%AE%AE/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E7%BF%BB%E8%AF%91-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%92%8Cunity%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%848%E6%9D%A1%E5%BB%BA%E8%AE%AE/</guid>
        
        <tag>游戏开发</tag>
        
        <tag>unity</tag>
        
        <tag>建议</tag>
        
        <tag>初学者</tag>
        
      </item>
    
      <item>
        <title>LeetCode算法题解</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;LeetCode 第一道题: Two Sum，难度简单。&lt;/p&gt; &lt;p&gt;Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice. Example: Given nums = [2, 7, 11, 15], target = 9,&lt;/p&gt; &lt;p&gt;Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1].&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;...</description>
        <pubDate>Sun, 21 Jul 2019 15:51:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3-Two-Sum/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3-Two-Sum/</guid>
        
        <tag>LeetCode</tag>
        
        <tag>算法</tag>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#examples&quot; id=&quot;markdown-toc-examples&quot;&gt;Examples&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#table&quot; id=&quot;markdown-toc-table&quot;&gt;Table&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#list&quot; id=&quot;markdown-toc-list&quot;&gt;List&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#image-responsive-plugin-imager&quot; id=&quot;markdown-toc-image-responsive-plugin-imager&quot;&gt;Image responsive (plugin Imager)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#code-in-one-line---text&quot; id=&quot;markdown-toc-code-in-one-line---text&quot;&gt;Code in one line - Text&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#unlighted-code&quot; id=&quot;markdown-toc-unlighted-code&quot;&gt;Unlighted code&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#gist-code&quot; id=&quot;markdown-toc-gist-code&quot;&gt;Gist code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hi! :hand:&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.webpagefx.com/tools/emoji-cheat-sheet/&quot; target=&quot;_blank&quot;&gt;Emoji Syntax&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt; &lt;p&gt;To add new...</description>
        <pubDate>Sat, 03 Feb 2018 21:22:16 +0800</pubDate>
        <link>https://flyingeye.cn/blog/welcome-to-jekyll/</link>
        <guid isPermaLink="true">https://flyingeye.cn/blog/welcome-to-jekyll/</guid>
        
        <tag>example</tag>
        
        <tag>welcome</tag>
        
        <tag>jekyll</tag>
        
        <tag>typing</tag>
        
        <tag>özel-bitcoin-adresi</tag>
        
      </item>
    
  </channel>
</rss>
